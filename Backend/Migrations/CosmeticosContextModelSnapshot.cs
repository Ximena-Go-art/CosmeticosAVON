// <auto-generated />
using System;
using Backend.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(CosmeticosContext))]
    partial class CosmeticosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Service.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Categoria = 0,
                            Descripcion = "Un aroma fresco y duradero.",
                            IsDeleted = false,
                            Marca = "",
                            Nombre = "Perfume Avon",
                            Precio = 299.99m,
                            Stock = 50
                        },
                        new
                        {
                            Id = 2,
                            Categoria = 1,
                            Descripcion = "Color intenso y humectante.",
                            IsDeleted = false,
                            Marca = "",
                            Nombre = "Labial Avon",
                            Precio = 49.99m,
                            Stock = 100
                        },
                        new
                        {
                            Id = 3,
                            Categoria = 4,
                            Descripcion = "Hidratación profunda para todo el día.",
                            IsDeleted = false,
                            Marca = "",
                            Nombre = "Crema Hidratante Avon",
                            Precio = 89.99m,
                            Stock = 75
                        },
                        new
                        {
                            Id = 4,
                            Categoria = 2,
                            Descripcion = "Colores vibrantes y duraderos.",
                            IsDeleted = false,
                            Marca = "",
                            Nombre = "Sombra de Ojos Avon",
                            Precio = 59.99m,
                            Stock = 80
                        },
                        new
                        {
                            Id = 5,
                            Categoria = 3,
                            Descripcion = "Acabado brillante y secado rápido.",
                            IsDeleted = false,
                            Marca = "",
                            Nombre = "Esmalte de Uñas Avon",
                            Precio = 39.99m,
                            Stock = 120
                        });
                });

            modelBuilder.Entity("Service.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Correo = "juancho@gmail.com",
                            IsDeleted = false,
                            Nombre = "Juan",
                            Password = "juan123",
                            Rol = 1
                        },
                        new
                        {
                            Id = 2,
                            Correo = "mariana@gmail.com",
                            IsDeleted = false,
                            Nombre = "Maria",
                            Password = "maria123",
                            Rol = 2
                        },
                        new
                        {
                            Id = 3,
                            Correo = "estrellademar@gmail.com",
                            IsDeleted = false,
                            Nombre = "Patricio",
                            Password = "patry123",
                            Rol = 4
                        });
                });

            modelBuilder.Entity("Service.Models.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("PrecioTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("VendedorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("VendedorId");

                    b.ToTable("Ventas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 3,
                            Estado = "pagada",
                            Fecha = new DateTime(2025, 9, 7, 16, 0, 38, 30, DateTimeKind.Local).AddTicks(8030),
                            IsDeleted = false,
                            PrecioTotal = 689.97m,
                            VendedorId = 2
                        },
                        new
                        {
                            Id = 2,
                            ClienteId = 3,
                            Estado = "pendiente",
                            Fecha = new DateTime(2025, 9, 8, 16, 0, 38, 30, DateTimeKind.Local).AddTicks(8047),
                            IsDeleted = false,
                            PrecioTotal = 49.99m,
                            VendedorId = 2
                        },
                        new
                        {
                            Id = 3,
                            ClienteId = 3,
                            Estado = "pendiente",
                            Fecha = new DateTime(2025, 9, 9, 16, 0, 38, 30, DateTimeKind.Local).AddTicks(8055),
                            IsDeleted = false,
                            PrecioTotal = 0m,
                            VendedorId = 2
                        });
                });

            modelBuilder.Entity("Service.Models.VentaDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("VentaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VentaDetalles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 2,
                            IsDeleted = false,
                            PrecioUnitario = 299.99m,
                            ProductoId = 1,
                            VentaId = 1
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 1,
                            IsDeleted = false,
                            PrecioUnitario = 49.99m,
                            ProductoId = 2,
                            VentaId = 1
                        },
                        new
                        {
                            Id = 3,
                            Cantidad = 1,
                            IsDeleted = false,
                            PrecioUnitario = 89.99m,
                            ProductoId = 3,
                            VentaId = 1
                        });
                });

            modelBuilder.Entity("Service.Models.Venta", b =>
                {
                    b.HasOne("Service.Models.Usuario", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("Service.Models.Usuario", "Vendedor")
                        .WithMany()
                        .HasForeignKey("VendedorId");

                    b.Navigation("Cliente");

                    b.Navigation("Vendedor");
                });
#pragma warning restore 612, 618
        }
    }
}
